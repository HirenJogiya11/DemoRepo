var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import { Component } from '@angular/core';
import { FieldType } from '../../core/core';
export var FormlyFieldInput = (function (_super) {
    __extends(FormlyFieldInput, _super);
    function FormlyFieldInput() {
        _super.apply(this, arguments);
    }
    Object.defineProperty(FormlyFieldInput.prototype, "type", {
        get: function () {
            return this.to.type || 'text';
        },
        enumerable: true,
        configurable: true
    });
    FormlyFieldInput.decorators = [
        { type: Component, args: [{
                    selector: 'formly-field-input',
                    template: "\n    <input [type]=\"type\" [formControl]=\"formControl\" class=\"form-control\" [id]=\"id\"\n      [formlyAttributes]=\"field\" [ngClass]=\"{'form-control-danger': valid}\">\n    ",
                },] },
    ];
    FormlyFieldInput.ctorParameters = [];
    return FormlyFieldInput;
}(FieldType));
//# sourceMappingURL=input.js.map