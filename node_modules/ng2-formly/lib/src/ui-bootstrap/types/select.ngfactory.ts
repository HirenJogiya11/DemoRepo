/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../src/ui-bootstrap/types/select';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../../node_modules/@angular/forms/src/directives/select_control_value_accessor.ngfactory';
import * as import9 from '../../../node_modules/@angular/forms/src/directives/reactive_directives/form_control_directive.ngfactory';
import * as import10 from '../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import11 from '../../../../src/core/services/formly.single.focus.dispatcher';
import * as import12 from '../../core/components/formly.attributes.ngfactory';
import * as import13 from '@angular/core/src/linker/view_container';
import * as import14 from '../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import15 from '../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import16 from '@angular/core/src/linker/element_ref';
import * as import17 from '@angular/core/src/linker/template_ref';
import * as import18 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import19 from '@angular/common/src/directives/ng_if';
import * as import20 from '@angular/common/src/directives/ng_for';
import * as import21 from '@angular/forms/src/directives/select_control_value_accessor';
import * as import22 from '@angular/forms/src/directives/control_value_accessor';
import * as import23 from '@angular/forms/src/directives/reactive_directives/form_control_directive';
import * as import24 from '@angular/forms/src/directives/ng_control';
import * as import25 from '@angular/forms/src/directives/ng_control_status';
import * as import26 from '../../../../src/core/components/formly.attributes';
import * as import27 from '../../../node_modules/@angular/forms/src/directives/select_multiple_control_value_accessor.ngfactory';
import * as import28 from '@angular/forms/src/directives/select_multiple_control_value_accessor';
export class Wrapper_FormlyFieldSelect {
  /*private*/ _eventHandler:Function;
  context:import0.FormlyFieldSelect;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.FormlyFieldSelect();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_FormlyFieldSelect_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_FormlyFieldSelect_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.FormlyFieldSelect>;
  _FormlyFieldSelect_0_3:Wrapper_FormlyFieldSelect;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_FormlyFieldSelect_Host0,renderType_FormlyFieldSelect_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'formly-field-select',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_FormlyFieldSelect0(this.viewUtils,this,0,this._el_0);
    this._FormlyFieldSelect_0_3 = new Wrapper_FormlyFieldSelect();
    this.compView_0.create(this._FormlyFieldSelect_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._FormlyFieldSelect_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.FormlyFieldSelect) && (0 === requestNodeIndex))) { return this._FormlyFieldSelect_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._FormlyFieldSelect_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const FormlyFieldSelectNgFactory:import7.ComponentFactory<import0.FormlyFieldSelect> = new import7.ComponentFactory<import0.FormlyFieldSelect>('formly-field-select',View_FormlyFieldSelect_Host0,import0.FormlyFieldSelect);
const styles_FormlyFieldSelect:any[] = ([] as any[]);
var renderType_FormlyFieldSelect:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_FormlyFieldSelect,{});
export class View_FormlyFieldSelect0 extends import1.AppView<import0.FormlyFieldSelect> {
  _text_0:any;
  _el_1:any;
  _SelectControlValueAccessor_1_3:import8.Wrapper_SelectControlValueAccessor;
  _NG_VALUE_ACCESSOR_1_4:any[];
  _FormControlDirective_1_5:import9.Wrapper_FormControlDirective;
  _NgControl_1_6:any;
  _NgControlStatus_1_7:import10.Wrapper_NgControlStatus;
  _SingleFocusDispatcher_1_8:import11.SingleFocusDispatcher;
  _FormlyAttributes_1_9:import12.Wrapper_FormlyAttributes;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import13.ViewContainer;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import14.Wrapper_NgIf;
  _text_4:any;
  _anchor_5:any;
  /*private*/ _vc_5:import13.ViewContainer;
  _TemplateRef_5_5:any;
  _NgFor_5_6:import15.Wrapper_NgFor;
  _text_6:any;
  _text_7:any;
  /*private*/ _expr_21:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_FormlyFieldSelect0,renderType_FormlyFieldSelect,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
    this._expr_21 = import6.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'select',new import3.InlineArray2(2,'class','form-control'),(null as any));
    this._SelectControlValueAccessor_1_3 = new import8.Wrapper_SelectControlValueAccessor(this.renderer,new import16.ElementRef(this._el_1));
    this._NG_VALUE_ACCESSOR_1_4 = [this._SelectControlValueAccessor_1_3.context];
    this._FormControlDirective_1_5 = new import9.Wrapper_FormControlDirective((null as any),(null as any),this._NG_VALUE_ACCESSOR_1_4);
    this._NgControl_1_6 = this._FormControlDirective_1_5.context;
    this._NgControlStatus_1_7 = new import10.Wrapper_NgControlStatus(this._NgControl_1_6);
    this._SingleFocusDispatcher_1_8 = new import11.SingleFocusDispatcher();
    this._FormlyAttributes_1_9 = new import12.Wrapper_FormlyAttributes(this.renderer,new import16.ElementRef(this._el_1),this._SingleFocusDispatcher_1_8);
    this._text_2 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._vc_3 = new import13.ViewContainer(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import17.TemplateRef_(this,3,this._anchor_3);
    this._NgIf_3_6 = new import14.Wrapper_NgIf(this._vc_3.vcRef,this._TemplateRef_3_5);
    this._text_4 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._anchor_5 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._vc_5 = new import13.ViewContainer(5,1,this,this._anchor_5);
    this._TemplateRef_5_5 = new import17.TemplateRef_(this,5,this._anchor_5);
    this._NgFor_5_6 = new import15.Wrapper_NgFor(this._vc_5.vcRef,this._TemplateRef_5_5,this.parentView.injectorGet(import18.IterableDiffers,this.parentIndex),this.ref);
    this._text_6 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_7 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray8(6,'change',(null as any),'blur',(null as any),'focus',(null as any)),this.eventHandler(this.handleEvent_1));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._anchor_5,
      this._text_6,
      this._text_7
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import17.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import19.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6.context; }
    if (((token === import17.TemplateRef) && (5 === requestNodeIndex))) { return this._TemplateRef_5_5; }
    if (((token === import20.NgFor) && (5 === requestNodeIndex))) { return this._NgFor_5_6.context; }
    if (((token === import21.SelectControlValueAccessor) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._SelectControlValueAccessor_1_3.context; }
    if (((token === import22.NG_VALUE_ACCESSOR) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._NG_VALUE_ACCESSOR_1_4; }
    if (((token === import23.FormControlDirective) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._FormControlDirective_1_5.context; }
    if (((token === import24.NgControl) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._NgControl_1_6; }
    if (((token === import25.NgControlStatus) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._NgControlStatus_1_7.context; }
    if (((token === import11.SingleFocusDispatcher) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._SingleFocusDispatcher_1_8; }
    if (((token === import26.FormlyAttributes) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._FormlyAttributes_1_9.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._SelectControlValueAccessor_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    const currVal_1_1_0:any = this.context.formControl;
    this._FormControlDirective_1_5.check_form(currVal_1_1_0,throwOnChange,false);
    this._FormControlDirective_1_5.ngDoCheck(this,this._el_1,throwOnChange);
    this._NgControlStatus_1_7.ngDoCheck(this,this._el_1,throwOnChange);
    const currVal_1_3_0:any = this.context.field;
    this._FormlyAttributes_1_9.check_field(currVal_1_3_0,throwOnChange,false);
    const currVal_1_3_1:any = this.context.formControl;
    this._FormlyAttributes_1_9.check_formControl(currVal_1_3_1,throwOnChange,false);
    this._FormlyAttributes_1_9.ngDoCheck(this,this._el_1,throwOnChange);
    const currVal_3_0_0:any = this.context.to.placeholder;
    this._NgIf_3_6.check_ngIf(currVal_3_0_0,throwOnChange,false);
    this._NgIf_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    const currVal_5_0_0:any = this.context.selectOptions;
    this._NgFor_5_6.check_ngForOf(currVal_5_0_0,throwOnChange,false);
    this._NgFor_5_6.ngDoCheck(this,this._anchor_5,throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
    this._vc_5.detectChangesInNestedViews(throwOnChange);
    const currVal_21:any = this.context.id;
    if (import3.checkBinding(throwOnChange,this._expr_21,currVal_21)) {
      this.renderer.setElementProperty(this._el_1,'id',currVal_21);
      this._expr_21 = currVal_21;
    }
    this._NgControlStatus_1_7.checkHost(this,this,this._el_1,throwOnChange);
  }
  destroyInternal():void {
    this._vc_3.destroyNestedViews();
    this._vc_5.destroyNestedViews();
    this._FormControlDirective_1_5.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 3)) { return new View_FormlyFieldSelect1(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    if ((nodeIndex == 5)) { return new View_FormlyFieldSelect2(this.viewUtils,this,5,this._anchor_5,this._vc_5); }
    return (null as any);
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._SelectControlValueAccessor_1_3.handleEvent(eventName,$event) && result);
    result = (this._FormlyAttributes_1_9.handleEvent(eventName,$event) && result);
    return result;
  }
}
class View_FormlyFieldSelect1 extends import1.AppView<any> {
  _el_0:any;
  _NgSelectOption_0_3:import8.Wrapper_NgSelectOption;
  _NgSelectMultipleOption_0_4:import27.Wrapper_NgSelectMultipleOption;
  _text_1:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_FormlyFieldSelect1,renderType_FormlyFieldSelect,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_4 = import6.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'option',new import3.InlineArray2(2,'value',''),(null as any));
    this._NgSelectOption_0_3 = new import8.Wrapper_NgSelectOption(new import16.ElementRef(this._el_0),this.renderer,(<View_FormlyFieldSelect0>this.parentView)._SelectControlValueAccessor_1_3.context);
    this._NgSelectMultipleOption_0_4 = new import27.Wrapper_NgSelectMultipleOption(new import16.ElementRef(this._el_0),this.renderer,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import21.NgSelectOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgSelectOption_0_3.context; }
    if (((token === import28.NgSelectMultipleOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgSelectMultipleOption_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = '';
    this._NgSelectOption_0_3.check_value(currVal_0_0_0,throwOnChange,false);
    this._NgSelectOption_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_1_0:any = '';
    this._NgSelectMultipleOption_0_4.check_value(currVal_0_1_0,throwOnChange,false);
    this._NgSelectMultipleOption_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_4:any = import3.inlineInterpolate(1,'',this.parentView.context.to.placeholder,'');
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setText(this._text_1,currVal_4);
      this._expr_4 = currVal_4;
    }
  }
  destroyInternal():void {
    this._NgSelectOption_0_3.ngOnDestroy();
    this._NgSelectMultipleOption_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_FormlyFieldSelect2 extends import1.AppView<any> {
  _text_0:any;
  _anchor_1:any;
  /*private*/ _vc_1:import13.ViewContainer;
  _TemplateRef_1_5:any;
  _NgIf_1_6:import14.Wrapper_NgIf;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import13.ViewContainer;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import14.Wrapper_NgIf;
  _text_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_FormlyFieldSelect2,renderType_FormlyFieldSelect,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._text_0 = this.renderer.createText((null as any),'\n       ',(null as any));
    this._anchor_1 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._vc_1 = new import13.ViewContainer(1,(null as any),this,this._anchor_1);
    this._TemplateRef_1_5 = new import17.TemplateRef_(this,1,this._anchor_1);
    this._NgIf_1_6 = new import14.Wrapper_NgIf(this._vc_1.vcRef,this._TemplateRef_1_5);
    this._text_2 = this.renderer.createText((null as any),'\n       ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._vc_3 = new import13.ViewContainer(3,(null as any),this,this._anchor_3);
    this._TemplateRef_3_5 = new import17.TemplateRef_(this,3,this._anchor_3);
    this._NgIf_3_6 = new import14.Wrapper_NgIf(this._vc_3.vcRef,this._TemplateRef_3_5);
    this._text_4 = this.renderer.createText((null as any),'\n    ',(null as any));
    this.init(this._text_4,((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._anchor_1,
      this._text_2,
      this._anchor_3,
      this._text_4
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import17.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import19.NgIf) && (1 === requestNodeIndex))) { return this._NgIf_1_6.context; }
    if (((token === import17.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import19.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = this.context.$implicit.group;
    this._NgIf_1_6.check_ngIf(currVal_1_0_0,throwOnChange,false);
    this._NgIf_1_6.ngDoCheck(this,this._anchor_1,throwOnChange);
    const currVal_3_0_0:boolean = !this.context.$implicit.group;
    this._NgIf_3_6.check_ngIf(currVal_3_0_0,throwOnChange,false);
    this._NgIf_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    this._vc_1.detectChangesInNestedViews(throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
    this._vc_3.destroyNestedViews();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._text_0,ctx);
    cb(this._vc_1.nativeElement,ctx);
    this._vc_1.visitNestedViewRootNodes(cb,ctx);
    cb(this._text_2,ctx);
    cb(this._vc_3.nativeElement,ctx);
    this._vc_3.visitNestedViewRootNodes(cb,ctx);
    cb(this._text_4,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 1)) { return new View_FormlyFieldSelect3(this.viewUtils,this,1,this._anchor_1,this._vc_1); }
    if ((nodeIndex == 3)) { return new View_FormlyFieldSelect5(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    return (null as any);
  }
}
class View_FormlyFieldSelect3 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import13.ViewContainer;
  _TemplateRef_2_5:any;
  _NgFor_2_6:import15.Wrapper_NgFor;
  _text_3:any;
  /*private*/ _expr_7:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_FormlyFieldSelect3,renderType_FormlyFieldSelect,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_7 = import6.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'optgroup',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n         ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_2 = new import13.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import17.TemplateRef_(this,2,this._anchor_2);
    this._NgFor_2_6 = new import15.Wrapper_NgFor(this._vc_2.vcRef,this._TemplateRef_2_5,this.parentView.parentView.parentView.injectorGet(import18.IterableDiffers,this.parentView.parentView.parentIndex),this.parentView.parentView.ref);
    this._text_3 = this.renderer.createText(this._el_0,'\n       ',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import17.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import20.NgFor) && (2 === requestNodeIndex))) { return this._NgFor_2_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.parentView.context.$implicit.group;
    this._NgFor_2_6.check_ngForOf(currVal_2_0_0,throwOnChange,false);
    this._NgFor_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    const currVal_7:any = import3.inlineInterpolate(1,'',this.parentView.context.$implicit.label,'');
    if (import3.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      this.renderer.setElementProperty(this._el_0,'label',currVal_7);
      this._expr_7 = currVal_7;
    }
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 2)) { return new View_FormlyFieldSelect4(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    return (null as any);
  }
}
class View_FormlyFieldSelect4 extends import1.AppView<any> {
  _el_0:any;
  _NgSelectOption_0_3:import8.Wrapper_NgSelectOption;
  _NgSelectMultipleOption_0_4:import27.Wrapper_NgSelectMultipleOption;
  _text_1:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_FormlyFieldSelect4,renderType_FormlyFieldSelect,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_4 = import6.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'option',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._NgSelectOption_0_3 = new import8.Wrapper_NgSelectOption(new import16.ElementRef(this._el_0),this.renderer,(<View_FormlyFieldSelect0>this.parentView.parentView.parentView)._SelectControlValueAccessor_1_3.context);
    this._NgSelectMultipleOption_0_4 = new import27.Wrapper_NgSelectMultipleOption(new import16.ElementRef(this._el_0),this.renderer,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import21.NgSelectOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgSelectOption_0_3.context; }
    if (((token === import28.NgSelectMultipleOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgSelectMultipleOption_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.context.$implicit.value;
    this._NgSelectOption_0_3.check_value(currVal_0_0_0,throwOnChange,false);
    this._NgSelectOption_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_1_0:any = this.context.$implicit.value;
    this._NgSelectMultipleOption_0_4.check_value(currVal_0_1_0,throwOnChange,false);
    this._NgSelectMultipleOption_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_4:any = import3.inlineInterpolate(1,'\n           ',this.context.$implicit.label,'\n         ');
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setText(this._text_1,currVal_4);
      this._expr_4 = currVal_4;
    }
  }
  destroyInternal():void {
    this._NgSelectOption_0_3.ngOnDestroy();
    this._NgSelectMultipleOption_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_FormlyFieldSelect5 extends import1.AppView<any> {
  _el_0:any;
  _NgSelectOption_0_3:import8.Wrapper_NgSelectOption;
  _NgSelectMultipleOption_0_4:import27.Wrapper_NgSelectMultipleOption;
  _text_1:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_FormlyFieldSelect5,renderType_FormlyFieldSelect,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_4 = import6.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'option',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._NgSelectOption_0_3 = new import8.Wrapper_NgSelectOption(new import16.ElementRef(this._el_0),this.renderer,(<View_FormlyFieldSelect0>this.parentView.parentView)._SelectControlValueAccessor_1_3.context);
    this._NgSelectMultipleOption_0_4 = new import27.Wrapper_NgSelectMultipleOption(new import16.ElementRef(this._el_0),this.renderer,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import21.NgSelectOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgSelectOption_0_3.context; }
    if (((token === import28.NgSelectMultipleOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgSelectMultipleOption_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.context.$implicit.value;
    this._NgSelectOption_0_3.check_value(currVal_0_0_0,throwOnChange,false);
    this._NgSelectOption_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_1_0:any = this.parentView.context.$implicit.value;
    this._NgSelectMultipleOption_0_4.check_value(currVal_0_1_0,throwOnChange,false);
    this._NgSelectMultipleOption_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_4:any = import3.inlineInterpolate(1,'',this.parentView.context.$implicit.label,'');
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setText(this._text_1,currVal_4);
      this._expr_4 = currVal_4;
    }
  }
  destroyInternal():void {
    this._NgSelectOption_0_3.ngOnDestroy();
    this._NgSelectMultipleOption_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}