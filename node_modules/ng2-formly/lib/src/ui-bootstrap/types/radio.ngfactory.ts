/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../src/ui-bootstrap/types/radio';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../../node_modules/@angular/forms/src/directives/reactive_directives/form_group_directive.ngfactory';
import * as import9 from '../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import10 from '@angular/core/src/linker/view_container';
import * as import11 from '../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import12 from '@angular/core/src/linker/template_ref';
import * as import13 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import14 from '@angular/common/src/directives/ng_for';
import * as import15 from '@angular/forms/src/directives/reactive_directives/form_group_directive';
import * as import16 from '@angular/forms/src/directives/control_container';
import * as import17 from '@angular/forms/src/directives/ng_control_status';
import * as import18 from '../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import19 from '../../../node_modules/@angular/forms/src/directives/radio_control_value_accessor.ngfactory';
import * as import20 from '../../../node_modules/@angular/forms/src/directives/reactive_directives/form_control_directive.ngfactory';
import * as import21 from '../../../../src/core/services/formly.single.focus.dispatcher';
import * as import22 from '../../core/components/formly.attributes.ngfactory';
import * as import23 from '@angular/core/src/linker/element_ref';
import * as import24 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import25 from '@angular/forms/src/directives/default_value_accessor';
import * as import26 from '@angular/forms/src/directives/control_value_accessor';
import * as import27 from '@angular/forms/src/directives/reactive_directives/form_control_directive';
import * as import28 from '@angular/forms/src/directives/ng_control';
import * as import29 from '../../../../src/core/components/formly.attributes';
export class Wrapper_FormlyFieldRadio {
  /*private*/ _eventHandler:Function;
  context:import0.FormlyFieldRadio;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.FormlyFieldRadio();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_FormlyFieldRadio_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_FormlyFieldRadio_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.FormlyFieldRadio>;
  _FormlyFieldRadio_0_3:Wrapper_FormlyFieldRadio;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_FormlyFieldRadio_Host0,renderType_FormlyFieldRadio_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'formly-field-radio',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_FormlyFieldRadio0(this.viewUtils,this,0,this._el_0);
    this._FormlyFieldRadio_0_3 = new Wrapper_FormlyFieldRadio();
    this.compView_0.create(this._FormlyFieldRadio_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._FormlyFieldRadio_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.FormlyFieldRadio) && (0 === requestNodeIndex))) { return this._FormlyFieldRadio_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._FormlyFieldRadio_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const FormlyFieldRadioNgFactory:import7.ComponentFactory<import0.FormlyFieldRadio> = new import7.ComponentFactory<import0.FormlyFieldRadio>('formly-field-radio',View_FormlyFieldRadio_Host0,import0.FormlyFieldRadio);
const styles_FormlyFieldRadio:any[] = ([] as any[]);
var renderType_FormlyFieldRadio:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_FormlyFieldRadio,{});
export class View_FormlyFieldRadio0 extends import1.AppView<import0.FormlyFieldRadio> {
  _text_0:any;
  _el_1:any;
  _FormGroupDirective_1_3:import8.Wrapper_FormGroupDirective;
  _ControlContainer_1_4:any;
  _NgControlStatusGroup_1_5:import9.Wrapper_NgControlStatusGroup;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import10.ViewContainer;
  _TemplateRef_3_5:any;
  _NgFor_3_6:import11.Wrapper_NgFor;
  _text_4:any;
  _text_5:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_FormlyFieldRadio0,renderType_FormlyFieldRadio,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._FormGroupDirective_1_3 = new import8.Wrapper_FormGroupDirective((null as any),(null as any));
    this._ControlContainer_1_4 = this._FormGroupDirective_1_3.context;
    this._NgControlStatusGroup_1_5 = new import9.Wrapper_NgControlStatusGroup(this._ControlContainer_1_4);
    this._text_2 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._vc_3 = new import10.ViewContainer(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import12.TemplateRef_(this,3,this._anchor_3);
    this._NgFor_3_6 = new import11.Wrapper_NgFor(this._vc_3.vcRef,this._TemplateRef_3_5,this.parentView.injectorGet(import13.IterableDiffers,this.parentIndex),this.ref);
    this._text_4 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_5 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray4(4,'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_1));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._text_5
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import14.NgFor) && (3 === requestNodeIndex))) { return this._NgFor_3_6.context; }
    if (((token === import15.FormGroupDirective) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._FormGroupDirective_1_3.context; }
    if (((token === import16.ControlContainer) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._ControlContainer_1_4; }
    if (((token === import17.NgControlStatusGroup) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._NgControlStatusGroup_1_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = this.context.form;
    this._FormGroupDirective_1_3.check_form(currVal_1_0_0,throwOnChange,false);
    this._FormGroupDirective_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    this._NgControlStatusGroup_1_5.ngDoCheck(this,this._el_1,throwOnChange);
    const currVal_3_0_0:any = this.context.to.options;
    this._NgFor_3_6.check_ngForOf(currVal_3_0_0,throwOnChange,false);
    this._NgFor_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
    this._NgControlStatusGroup_1_5.checkHost(this,this,this._el_1,throwOnChange);
  }
  destroyInternal():void {
    this._vc_3.destroyNestedViews();
    this._FormGroupDirective_1_3.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 3)) { return new View_FormlyFieldRadio1(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    return (null as any);
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._FormGroupDirective_1_3.handleEvent(eventName,$event) && result);
    return result;
  }
}
class View_FormlyFieldRadio1 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _DefaultValueAccessor_4_3:import18.Wrapper_DefaultValueAccessor;
  _RadioControlValueAccessor_4_4:import19.Wrapper_RadioControlValueAccessor;
  _NG_VALUE_ACCESSOR_4_5:any[];
  _FormControlDirective_4_6:import20.Wrapper_FormControlDirective;
  _NgControl_4_7:any;
  _NgControlStatus_4_8:import9.Wrapper_NgControlStatus;
  _SingleFocusDispatcher_4_9:import21.SingleFocusDispatcher;
  _FormlyAttributes_4_10:import22.Wrapper_FormlyAttributes;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _text_8:any;
  /*private*/ _expr_17:any;
  /*private*/ _expr_18:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_FormlyFieldRadio1,renderType_FormlyFieldRadio,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_17 = import6.UNINITIALIZED;
    this._expr_18 = import6.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','radio'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'label',new import3.InlineArray2(2,'class','custom-control custom-radio'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n          ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'input',new import3.InlineArray4(4,'class','custom-control-input','type','radio'),(null as any));
    this._DefaultValueAccessor_4_3 = new import18.Wrapper_DefaultValueAccessor(this.renderer,new import23.ElementRef(this._el_4));
    this._RadioControlValueAccessor_4_4 = new import19.Wrapper_RadioControlValueAccessor(this.renderer,new import23.ElementRef(this._el_4),this.parentView.parentView.injectorGet(import24.RadioControlRegistry,this.parentView.parentIndex),this.injector(4));
    this._NG_VALUE_ACCESSOR_4_5 = [
      this._DefaultValueAccessor_4_3.context,
      this._RadioControlValueAccessor_4_4.context
    ]
    ;
    this._FormControlDirective_4_6 = new import20.Wrapper_FormControlDirective((null as any),(null as any),this._NG_VALUE_ACCESSOR_4_5);
    this._NgControl_4_7 = this._FormControlDirective_4_6.context;
    this._NgControlStatus_4_8 = new import9.Wrapper_NgControlStatus(this._NgControl_4_7);
    this._SingleFocusDispatcher_4_9 = new import21.SingleFocusDispatcher();
    this._FormlyAttributes_4_10 = new import22.Wrapper_FormlyAttributes(this.renderer,new import23.ElementRef(this._el_4),this._SingleFocusDispatcher_4_9);
    this._text_5 = this.renderer.createText(this._el_2,'',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_2,'span',new import3.InlineArray2(2,'class','custom-control-indicator'),(null as any));
    this._text_7 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._text_8 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_4,new import3.InlineArray8(8,'input',(null as any),'blur',(null as any),'change',(null as any),'focus',(null as any)),this.eventHandler(this.handleEvent_4));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import25.DefaultValueAccessor) && (4 === requestNodeIndex))) { return this._DefaultValueAccessor_4_3.context; }
    if (((token === import24.RadioControlValueAccessor) && (4 === requestNodeIndex))) { return this._RadioControlValueAccessor_4_4.context; }
    if (((token === import26.NG_VALUE_ACCESSOR) && (4 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_4_5; }
    if (((token === import27.FormControlDirective) && (4 === requestNodeIndex))) { return this._FormControlDirective_4_6.context; }
    if (((token === import28.NgControl) && (4 === requestNodeIndex))) { return this._NgControl_4_7; }
    if (((token === import17.NgControlStatus) && (4 === requestNodeIndex))) { return this._NgControlStatus_4_8.context; }
    if (((token === import21.SingleFocusDispatcher) && (4 === requestNodeIndex))) { return this._SingleFocusDispatcher_4_9; }
    if (((token === import29.FormlyAttributes) && (4 === requestNodeIndex))) { return this._FormlyAttributes_4_10.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DefaultValueAccessor_4_3.ngDoCheck(this,this._el_4,throwOnChange);
    const currVal_4_1_0:any = this.parentView.context.id;
    this._RadioControlValueAccessor_4_4.check_name(currVal_4_1_0,throwOnChange,false);
    const currVal_4_1_1:any = this.context.$implicit.key;
    this._RadioControlValueAccessor_4_4.check_value(currVal_4_1_1,throwOnChange,false);
    this._RadioControlValueAccessor_4_4.ngDoCheck(this,this._el_4,throwOnChange);
    const currVal_4_2_0:any = this.parentView.context.formControl;
    this._FormControlDirective_4_6.check_form(currVal_4_2_0,throwOnChange,false);
    this._FormControlDirective_4_6.ngDoCheck(this,this._el_4,throwOnChange);
    this._NgControlStatus_4_8.ngDoCheck(this,this._el_4,throwOnChange);
    const currVal_4_4_0:any = this.parentView.context.field;
    this._FormlyAttributes_4_10.check_field(currVal_4_4_0,throwOnChange,false);
    const currVal_4_4_1:any = this.parentView.context.formControl;
    this._FormlyAttributes_4_10.check_formControl(currVal_4_4_1,throwOnChange,false);
    this._FormlyAttributes_4_10.ngDoCheck(this,this._el_4,throwOnChange);
    const currVal_17:any = this.parentView.context.id;
    if (import3.checkBinding(throwOnChange,this._expr_17,currVal_17)) {
      this.renderer.setElementProperty(this._el_4,'id',currVal_17);
      this._expr_17 = currVal_17;
    }
    this._NgControlStatus_4_8.checkHost(this,this,this._el_4,throwOnChange);
    const currVal_18:any = import3.inlineInterpolate(1,'\n          ',this.context.$implicit.value,'\n          ');
    if (import3.checkBinding(throwOnChange,this._expr_18,currVal_18)) {
      this.renderer.setText(this._text_5,currVal_18);
      this._expr_18 = currVal_18;
    }
  }
  destroyInternal():void {
    this._RadioControlValueAccessor_4_4.ngOnDestroy();
    this._FormControlDirective_4_6.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_4(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_4_3.handleEvent(eventName,$event) && result);
    result = (this._RadioControlValueAccessor_4_4.handleEvent(eventName,$event) && result);
    result = (this._FormlyAttributes_4_10.handleEvent(eventName,$event) && result);
    return result;
  }
}