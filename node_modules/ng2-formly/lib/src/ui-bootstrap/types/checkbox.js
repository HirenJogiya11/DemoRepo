var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import { Component } from '@angular/core';
import { FormControl } from '@angular/forms';
import { FieldType } from '../../core/core';
export var FormlyFieldCheckbox = (function (_super) {
    __extends(FormlyFieldCheckbox, _super);
    function FormlyFieldCheckbox() {
        _super.apply(this, arguments);
    }
    FormlyFieldCheckbox.createControl = function (model, field) {
        return new FormControl({ value: model ? 'on' : undefined, disabled: field.templateOptions.disabled }, field.validators ? field.validators.validation : undefined, field.asyncValidators ? field.asyncValidators.validation : undefined);
    };
    FormlyFieldCheckbox.decorators = [
        { type: Component, args: [{
                    selector: 'formly-field-checkbox',
                    template: "\n    <label class=\"custom-control custom-checkbox\">\n      <input [id]=\"id\" type=\"checkbox\" [formControl]=\"formControl\"\n        *ngIf=\"!to.hidden\" value=\"on\"\n        [formlyAttributes]=\"field\" class=\"custom-control-input\">\n        {{to.label}}\n        <span class=\"custom-control-indicator\"></span>\n    </label>\n  ",
                },] },
    ];
    FormlyFieldCheckbox.ctorParameters = [];
    return FormlyFieldCheckbox;
}(FieldType));
//# sourceMappingURL=checkbox.js.map