/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../src/ui-bootstrap/types/input';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import9 from '../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import10 from '../../../node_modules/@angular/forms/src/directives/reactive_directives/form_control_directive.ngfactory';
import * as import11 from '../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import12 from '../../../../src/core/services/formly.single.focus.dispatcher';
import * as import13 from '../../core/components/formly.attributes.ngfactory';
import * as import14 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import15 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import16 from '@angular/core/src/linker/element_ref';
import * as import17 from '@angular/common/src/directives/ng_class';
import * as import18 from '@angular/forms/src/directives/default_value_accessor';
import * as import19 from '@angular/forms/src/directives/control_value_accessor';
import * as import20 from '@angular/forms/src/directives/reactive_directives/form_control_directive';
import * as import21 from '@angular/forms/src/directives/ng_control';
import * as import22 from '@angular/forms/src/directives/ng_control_status';
import * as import23 from '../../../../src/core/components/formly.attributes';
export class Wrapper_FormlyFieldInput {
  /*private*/ _eventHandler:Function;
  context:import0.FormlyFieldInput;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.FormlyFieldInput();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_FormlyFieldInput_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_FormlyFieldInput_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.FormlyFieldInput>;
  _FormlyFieldInput_0_3:Wrapper_FormlyFieldInput;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_FormlyFieldInput_Host0,renderType_FormlyFieldInput_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'formly-field-input',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_FormlyFieldInput0(this.viewUtils,this,0,this._el_0);
    this._FormlyFieldInput_0_3 = new Wrapper_FormlyFieldInput();
    this.compView_0.create(this._FormlyFieldInput_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._FormlyFieldInput_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.FormlyFieldInput) && (0 === requestNodeIndex))) { return this._FormlyFieldInput_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._FormlyFieldInput_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const FormlyFieldInputNgFactory:import7.ComponentFactory<import0.FormlyFieldInput> = new import7.ComponentFactory<import0.FormlyFieldInput>('formly-field-input',View_FormlyFieldInput_Host0,import0.FormlyFieldInput);
const styles_FormlyFieldInput:any[] = ([] as any[]);
var renderType_FormlyFieldInput:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_FormlyFieldInput,{});
export class View_FormlyFieldInput0 extends import1.AppView<import0.FormlyFieldInput> {
  _text_0:any;
  _el_1:any;
  _NgClass_1_3:import8.Wrapper_NgClass;
  _DefaultValueAccessor_1_4:import9.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_1_5:any[];
  _FormControlDirective_1_6:import10.Wrapper_FormControlDirective;
  _NgControl_1_7:any;
  _NgControlStatus_1_8:import11.Wrapper_NgControlStatus;
  _SingleFocusDispatcher_1_9:import12.SingleFocusDispatcher;
  _FormlyAttributes_1_10:import13.Wrapper_FormlyAttributes;
  _text_2:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  _map_13:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_FormlyFieldInput0,renderType_FormlyFieldInput,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
    this._expr_11 = import6.UNINITIALIZED;
    this._expr_12 = import6.UNINITIALIZED;
    this._map_13 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {'form-control-danger': p0};
    });
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'input',new import3.InlineArray2(2,'class','form-control'),(null as any));
    this._NgClass_1_3 = new import8.Wrapper_NgClass(this.parentView.injectorGet(import14.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import15.KeyValueDiffers,this.parentIndex),new import16.ElementRef(this._el_1),this.renderer);
    this._DefaultValueAccessor_1_4 = new import9.Wrapper_DefaultValueAccessor(this.renderer,new import16.ElementRef(this._el_1));
    this._NG_VALUE_ACCESSOR_1_5 = [this._DefaultValueAccessor_1_4.context];
    this._FormControlDirective_1_6 = new import10.Wrapper_FormControlDirective((null as any),(null as any),this._NG_VALUE_ACCESSOR_1_5);
    this._NgControl_1_7 = this._FormControlDirective_1_6.context;
    this._NgControlStatus_1_8 = new import11.Wrapper_NgControlStatus(this._NgControl_1_7);
    this._SingleFocusDispatcher_1_9 = new import12.SingleFocusDispatcher();
    this._FormlyAttributes_1_10 = new import13.Wrapper_FormlyAttributes(this.renderer,new import16.ElementRef(this._el_1),this._SingleFocusDispatcher_1_9);
    this._text_2 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray8(6,'input',(null as any),'blur',(null as any),'focus',(null as any)),this.eventHandler(this.handleEvent_1));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import17.NgClass) && (1 === requestNodeIndex))) { return this._NgClass_1_3.context; }
    if (((token === import18.DefaultValueAccessor) && (1 === requestNodeIndex))) { return this._DefaultValueAccessor_1_4.context; }
    if (((token === import19.NG_VALUE_ACCESSOR) && (1 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_1_5; }
    if (((token === import20.FormControlDirective) && (1 === requestNodeIndex))) { return this._FormControlDirective_1_6.context; }
    if (((token === import21.NgControl) && (1 === requestNodeIndex))) { return this._NgControl_1_7; }
    if (((token === import22.NgControlStatus) && (1 === requestNodeIndex))) { return this._NgControlStatus_1_8.context; }
    if (((token === import12.SingleFocusDispatcher) && (1 === requestNodeIndex))) { return this._SingleFocusDispatcher_1_9; }
    if (((token === import23.FormlyAttributes) && (1 === requestNodeIndex))) { return this._FormlyAttributes_1_10.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = 'form-control';
    this._NgClass_1_3.check_klass(currVal_1_0_0,throwOnChange,false);
    const currVal_1_0_1:any = this._map_13(this.context.valid);
    this._NgClass_1_3.check_ngClass(currVal_1_0_1,throwOnChange,false);
    this._NgClass_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    this._DefaultValueAccessor_1_4.ngDoCheck(this,this._el_1,throwOnChange);
    const currVal_1_2_0:any = this.context.formControl;
    this._FormControlDirective_1_6.check_form(currVal_1_2_0,throwOnChange,false);
    this._FormControlDirective_1_6.ngDoCheck(this,this._el_1,throwOnChange);
    this._NgControlStatus_1_8.ngDoCheck(this,this._el_1,throwOnChange);
    const currVal_1_4_0:any = this.context.field;
    this._FormlyAttributes_1_10.check_field(currVal_1_4_0,throwOnChange,false);
    const currVal_1_4_1:any = this.context.formControl;
    this._FormlyAttributes_1_10.check_formControl(currVal_1_4_1,throwOnChange,false);
    this._FormlyAttributes_1_10.ngDoCheck(this,this._el_1,throwOnChange);
    const currVal_11:any = this.context.type;
    if (import3.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      this.renderer.setElementProperty(this._el_1,'type',currVal_11);
      this._expr_11 = currVal_11;
    }
    const currVal_12:any = this.context.id;
    if (import3.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      this.renderer.setElementProperty(this._el_1,'id',currVal_12);
      this._expr_12 = currVal_12;
    }
    this._NgControlStatus_1_8.checkHost(this,this,this._el_1,throwOnChange);
  }
  destroyInternal():void {
    this._FormControlDirective_1_6.ngOnDestroy();
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_1_4.handleEvent(eventName,$event) && result);
    result = (this._FormlyAttributes_1_10.handleEvent(eventName,$event) && result);
    return result;
  }
}