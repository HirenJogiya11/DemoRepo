/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../src/ui-bootstrap/wrappers/fieldset';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/core/src/linker/query_list';
import * as import9 from '../../../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import10 from '@angular/core/src/linker/view_container';
import * as import11 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import12 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import13 from '@angular/core/src/linker/element_ref';
import * as import14 from '@angular/core/src/linker/template_ref';
import * as import15 from '@angular/common/src/directives/ng_class';
export class Wrapper_FormlyWrapperFieldset {
  /*private*/ _eventHandler:Function;
  context:import0.FormlyWrapperFieldset;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.FormlyWrapperFieldset();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_FormlyWrapperFieldset_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_FormlyWrapperFieldset_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.FormlyWrapperFieldset>;
  _FormlyWrapperFieldset_0_3:Wrapper_FormlyWrapperFieldset;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_FormlyWrapperFieldset_Host0,renderType_FormlyWrapperFieldset_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'formly-wrapper-fieldset',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_FormlyWrapperFieldset0(this.viewUtils,this,0,this._el_0);
    this._FormlyWrapperFieldset_0_3 = new Wrapper_FormlyWrapperFieldset();
    this.compView_0.create(this._FormlyWrapperFieldset_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._FormlyWrapperFieldset_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.FormlyWrapperFieldset) && (0 === requestNodeIndex))) { return this._FormlyWrapperFieldset_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._FormlyWrapperFieldset_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const FormlyWrapperFieldsetNgFactory:import7.ComponentFactory<import0.FormlyWrapperFieldset> = new import7.ComponentFactory<import0.FormlyWrapperFieldset>('formly-wrapper-fieldset',View_FormlyWrapperFieldset_Host0,import0.FormlyWrapperFieldset);
const styles_FormlyWrapperFieldset:any[] = ([] as any[]);
var renderType_FormlyWrapperFieldset:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_FormlyWrapperFieldset,{});
export class View_FormlyWrapperFieldset0 extends import1.AppView<import0.FormlyWrapperFieldset> {
  _viewQuery_fieldComponent_0:import8.QueryList<any>;
  _text_0:any;
  _el_1:any;
  _NgClass_1_3:import9.Wrapper_NgClass;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import10.ViewContainer;
  _TemplateRef_3_5:any;
  _text_4:any;
  _text_5:any;
  _map_10:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_FormlyWrapperFieldset0,renderType_FormlyWrapperFieldset,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
    this._map_10 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {'has-danger': p0};
    });
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_fieldComponent_0 = new import8.QueryList<any>();
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','form-group'),(null as any));
    this._NgClass_1_3 = new import9.Wrapper_NgClass(this.parentView.injectorGet(import11.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import12.KeyValueDiffers,this.parentIndex),new import13.ElementRef(this._el_1),this.renderer);
    this._text_2 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._vc_3 = new import10.ViewContainer(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import14.TemplateRef_(this,3,this._anchor_3);
    this._text_4 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_5 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    this._viewQuery_fieldComponent_0.reset([this._vc_3.vcRef]);
    this.context.fieldComponent = this._viewQuery_fieldComponent_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._text_5
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import15.NgClass) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._NgClass_1_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = 'form-group';
    this._NgClass_1_3.check_klass(currVal_1_0_0,throwOnChange,false);
    const currVal_1_0_1:any = this._map_10(this.context.valid);
    this._NgClass_1_3.check_ngClass(currVal_1_0_1,throwOnChange,false);
    this._NgClass_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_3.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 3)) { return new View_FormlyWrapperFieldset1(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    return (null as any);
  }
}
class View_FormlyWrapperFieldset1 extends import1.AppView<any> {
  _el_0:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_FormlyWrapperFieldset1,renderType_FormlyWrapperFieldset,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): ([] as any[])),(null as any));
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}