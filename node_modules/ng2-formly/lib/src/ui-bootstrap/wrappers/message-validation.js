var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { FieldWrapper } from '../../core/core';
export var FormlyWrapperValidationMessages = (function (_super) {
    __extends(FormlyWrapperValidationMessages, _super);
    function FormlyWrapperValidationMessages() {
        _super.apply(this, arguments);
    }
    Object.defineProperty(FormlyWrapperValidationMessages.prototype, "validationId", {
        get: function () {
            return this.field.id + '-message';
        },
        enumerable: true,
        configurable: true
    });
    FormlyWrapperValidationMessages.decorators = [
        { type: Component, args: [{
                    selector: 'formly-wrapper-validation-messages',
                    template: "\n    <template #fieldComponent></template>\n    <div>\n      <small class=\"text-muted text-danger\" *ngIf=\"valid\" role=\"alert\" [id]=\"validationId\"><formly-validation-message [fieldForm]=\"formControl\" [field]=\"field\"></formly-validation-message></small>\n    </div>\n  ",
                },] },
    ];
    FormlyWrapperValidationMessages.ctorParameters = [];
    FormlyWrapperValidationMessages.propDecorators = {
        'fieldComponent': [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] },],
    };
    return FormlyWrapperValidationMessages;
}(FieldWrapper));
//# sourceMappingURL=message-validation.js.map