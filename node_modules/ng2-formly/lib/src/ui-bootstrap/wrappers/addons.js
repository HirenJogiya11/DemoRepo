var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { FieldWrapper } from '../../core/core';
export var FormlyWrapperAddons = (function (_super) {
    __extends(FormlyWrapperAddons, _super);
    function FormlyWrapperAddons() {
        _super.apply(this, arguments);
    }
    FormlyWrapperAddons.prototype.addonRightClick = function ($event) {
        if (this.to['addonRight'].onClick) {
            this.to['addonRight'].onClick(this.to, this, $event);
        }
    };
    FormlyWrapperAddons.prototype.addonLeftClick = function ($event) {
        if (this.to['addonLeft'].onClick) {
            this.to['addonLeft'].onClick(this.to, this, $event);
        }
    };
    FormlyWrapperAddons.decorators = [
        { type: Component, args: [{
                    selector: 'formly-wrapper-addons',
                    template: "\n    <div class=\"input-group\">\n    <div class=\"input-group-addon\"\n         *ngIf=\"to.addonLeft\"\n         [ngStyle]=\"{cursor: to.addonLeft.onClick ? 'pointer' : 'inherit'}\"\n         (click)=\"addonLeftClick($event)\">\n        <i [ngClass]=\"to.addonLeft.class\" *ngIf=\"to.addonLeft.class\"></i>\n        <span *ngIf=\"to.addonLeft.text\">{{to.addonLeft.text}}</span>\n    </div>\n    <template #fieldComponent></template>\n    <div class=\"input-group-addon\"\n         *ngIf=\"to.addonRight\"\n         [ngStyle]=\"{cursor: to.addonRight.onClick ? 'pointer' : 'inherit'}\"\n         (click)=\"addonRightClick($event)\">\n        <i [ngClass]=\"to.addonRight.class\" *ngIf=\"to.addonRight.class\"></i>\n        <span *ngIf=\"to.addonRight.text\">{{to.addonRight.text}}</span>\n    </div>\n</div>\n  ",
                },] },
    ];
    FormlyWrapperAddons.ctorParameters = [];
    FormlyWrapperAddons.propDecorators = {
        'fieldComponent': [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] },],
    };
    return FormlyWrapperAddons;
}(FieldWrapper));
//# sourceMappingURL=addons.js.map