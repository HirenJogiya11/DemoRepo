/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '../../../src/ui-bootstrap/ui-bootstrap.module';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/forms/src/directives';
import * as import4 from '@angular/forms/src/form_providers';
import * as import5 from '../../../src/core/core';
import * as import6 from '@angular/common/src/localization';
import * as import7 from '@angular/forms/src/form_builder';
import * as import8 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import9 from '../../../src/core/services/formly.config';
import * as import10 from '../../../src/core/services/formly.form.builder';
import * as import11 from '../../../src/core/services/formly.event.emitter';
import * as import12 from '../../../src/core/services/formly.validation-messages';
import * as import13 from '@angular/core/src/di/injector';
import * as import14 from '../core/components/formly.group.ngfactory';
import * as import15 from './types/input.ngfactory';
import * as import16 from './types/checkbox.ngfactory';
import * as import17 from './types/radio.ngfactory';
import * as import18 from './types/select.ngfactory';
import * as import19 from './types/textarea.ngfactory';
import * as import20 from './types/multicheckbox.ngfactory';
import * as import21 from './wrappers/label.ngfactory';
import * as import22 from './wrappers/description.ngfactory';
import * as import23 from './wrappers/message-validation.ngfactory';
import * as import24 from './wrappers/fieldset.ngfactory';
import * as import25 from './wrappers/addons.ngfactory';
import * as import26 from '@angular/core/src/i18n/tokens';
import * as import27 from '../../../src/ui-bootstrap/types/input';
import * as import28 from '../../../src/ui-bootstrap/types/checkbox';
import * as import29 from '../../../src/ui-bootstrap/types/radio';
import * as import30 from '../../../src/ui-bootstrap/types/select';
import * as import31 from '../../../src/ui-bootstrap/types/textarea';
import * as import32 from '../../../src/ui-bootstrap/types/multicheckbox';
import * as import33 from '../../../src/ui-bootstrap/wrappers/label';
import * as import34 from '../../../src/ui-bootstrap/wrappers/description';
import * as import35 from '../../../src/ui-bootstrap/wrappers/message-validation';
import * as import36 from '../../../src/ui-bootstrap/wrappers/fieldset';
import * as import37 from '../../../src/ui-bootstrap/wrappers/addons';
import * as import38 from '../../../src/ui-bootstrap/run/description';
import * as import39 from '../../../src/ui-bootstrap/run/validation';
import * as import40 from '../../../src/ui-bootstrap/run/addon';
class FormlyBootstrapModuleInjector extends import0.NgModuleInjector<import1.FormlyBootstrapModule> {
  _CommonModule_0:import2.CommonModule;
  _InternalFormsSharedModule_1:import3.InternalFormsSharedModule;
  _ReactiveFormsModule_2:import4.ReactiveFormsModule;
  _FormlyModule_3:import5.FormlyModule;
  _FormlyBootstrapModule_4:import1.FormlyBootstrapModule;
  __NgLocalization_5:import6.NgLocaleLocalization;
  __FormBuilder_6:import7.FormBuilder;
  __RadioControlRegistry_7:import8.RadioControlRegistry;
  __FORMLY_CONFIG_TOKEN_8:any[];
  __FormlyConfig_9:import9.FormlyConfig;
  __FormlyFormBuilder_10:import10.FormlyFormBuilder;
  __FormlyPubSub_11:import11.FormlyPubSub;
  __FormlyValidationMessages_12:import12.FormlyValidationMessages;
  constructor(parent:import13.Injector) {
    super(parent,[
      import14.FormlyGroupNgFactory,
      import15.FormlyFieldInputNgFactory,
      import16.FormlyFieldCheckboxNgFactory,
      import17.FormlyFieldRadioNgFactory,
      import18.FormlyFieldSelectNgFactory,
      import19.FormlyFieldTextAreaNgFactory,
      import20.FormlyFieldMultiCheckboxNgFactory,
      import21.FormlyWrapperLabelNgFactory,
      import22.FormlyWrapperDescriptionNgFactory,
      import23.FormlyWrapperValidationMessagesNgFactory,
      import24.FormlyWrapperFieldsetNgFactory,
      import25.FormlyWrapperAddonsNgFactory
    ]
    ,([] as any[]));
  }
  get _NgLocalization_5():import6.NgLocaleLocalization {
    if ((this.__NgLocalization_5 == null)) { (this.__NgLocalization_5 = new import6.NgLocaleLocalization(this.parent.get(import26.LOCALE_ID))); }
    return this.__NgLocalization_5;
  }
  get _FormBuilder_6():import7.FormBuilder {
    if ((this.__FormBuilder_6 == null)) { (this.__FormBuilder_6 = new import7.FormBuilder()); }
    return this.__FormBuilder_6;
  }
  get _RadioControlRegistry_7():import8.RadioControlRegistry {
    if ((this.__RadioControlRegistry_7 == null)) { (this.__RadioControlRegistry_7 = new import8.RadioControlRegistry()); }
    return this.__RadioControlRegistry_7;
  }
  get _FORMLY_CONFIG_TOKEN_8():any[] {
      if ((this.__FORMLY_CONFIG_TOKEN_8 == null)) { (this.__FORMLY_CONFIG_TOKEN_8 = [{
        types: [
          {
            name: 'input',
            component: import27.FormlyFieldInput,
            wrappers: [
              'fieldset',
              'label'
            ]

          }
          ,
          {
            name: 'checkbox',
            component: import28.FormlyFieldCheckbox,
            wrappers: ['fieldset']
          }
          ,
          {
            name: 'radio',
            component: import29.FormlyFieldRadio,
            wrappers: [
              'fieldset',
              'label'
            ]

          }
          ,
          {
            name: 'select',
            component: import30.FormlyFieldSelect,
            wrappers: [
              'fieldset',
              'label'
            ]

          }
          ,
          {
            name: 'textarea',
            component: import31.FormlyFieldTextArea,
            wrappers: [
              'fieldset',
              'label'
            ]

          }
          ,
          {
            name: 'multicheckbox',
            component: import32.FormlyFieldMultiCheckbox,
            wrappers: [
              'fieldset',
              'label'
            ]

          }

        ]
        ,
        wrappers: [
          {
            name: 'label',
            component: import33.FormlyWrapperLabel
          }
          ,
          {
            name: 'description',
            component: import34.FormlyWrapperDescription
          }
          ,
          {
            name: 'validation-message',
            component: import35.FormlyWrapperValidationMessages
          }
          ,
          {
            name: 'fieldset',
            component: import36.FormlyWrapperFieldset
          }
          ,
          {
            name: 'addons',
            component: import37.FormlyWrapperAddons
          }

        ]
        ,
        manipulators: [
          {
            class: import38.TemplateDescription,
            method: 'run'
          }
          ,
          {
            class: import39.TemplateValidation,
            method: 'run'
          }
          ,
          {
            class: import40.TemplateAddons,
            method: 'run'
          }

        ]

      }
    ]); }
    return this.__FORMLY_CONFIG_TOKEN_8;
  }
  get _FormlyConfig_9():import9.FormlyConfig {
    if ((this.__FormlyConfig_9 == null)) { (this.__FormlyConfig_9 = new import9.FormlyConfig(this._FORMLY_CONFIG_TOKEN_8)); }
    return this.__FormlyConfig_9;
  }
  get _FormlyFormBuilder_10():import10.FormlyFormBuilder {
    if ((this.__FormlyFormBuilder_10 == null)) { (this.__FormlyFormBuilder_10 = new import10.FormlyFormBuilder(this._FormlyConfig_9)); }
    return this.__FormlyFormBuilder_10;
  }
  get _FormlyPubSub_11():import11.FormlyPubSub {
    if ((this.__FormlyPubSub_11 == null)) { (this.__FormlyPubSub_11 = new import11.FormlyPubSub()); }
    return this.__FormlyPubSub_11;
  }
  get _FormlyValidationMessages_12():import12.FormlyValidationMessages {
    if ((this.__FormlyValidationMessages_12 == null)) { (this.__FormlyValidationMessages_12 = new import12.FormlyValidationMessages(this._FORMLY_CONFIG_TOKEN_8)); }
    return this.__FormlyValidationMessages_12;
  }
  createInternal():import1.FormlyBootstrapModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._InternalFormsSharedModule_1 = new import3.InternalFormsSharedModule();
    this._ReactiveFormsModule_2 = new import4.ReactiveFormsModule();
    this._FormlyModule_3 = new import5.FormlyModule();
    this._FormlyBootstrapModule_4 = new import1.FormlyBootstrapModule();
    return this._FormlyBootstrapModule_4;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_1; }
    if ((token === import4.ReactiveFormsModule)) { return this._ReactiveFormsModule_2; }
    if ((token === import5.FormlyModule)) { return this._FormlyModule_3; }
    if ((token === import1.FormlyBootstrapModule)) { return this._FormlyBootstrapModule_4; }
    if ((token === import6.NgLocalization)) { return this._NgLocalization_5; }
    if ((token === import7.FormBuilder)) { return this._FormBuilder_6; }
    if ((token === import8.RadioControlRegistry)) { return this._RadioControlRegistry_7; }
    if ((token === import9.FORMLY_CONFIG_TOKEN)) { return this._FORMLY_CONFIG_TOKEN_8; }
    if ((token === import9.FormlyConfig)) { return this._FormlyConfig_9; }
    if ((token === import10.FormlyFormBuilder)) { return this._FormlyFormBuilder_10; }
    if ((token === import11.FormlyPubSub)) { return this._FormlyPubSub_11; }
    if ((token === import12.FormlyValidationMessages)) { return this._FormlyValidationMessages_12; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const FormlyBootstrapModuleNgFactory:import0.NgModuleFactory<import1.FormlyBootstrapModule> = new import0.NgModuleFactory(FormlyBootstrapModuleInjector,import1.FormlyBootstrapModule);