import { FormlyFieldConfig } from './core';
export declare function getFieldId(formId: string, options: FormlyFieldConfig, index: string | number): string;
export declare function getKeyPath(field: {
    key?: string | string[];
    fieldGroup?: any;
    fieldArray?: any;
}): (string | number)[];
export declare function getFieldModel(model: any, field: FormlyFieldConfig, constructEmptyObjects: boolean): any;
export declare function assignModelValue(model: any, path: any, value: any): void;
export declare function getValueForKey(model: any, path: any): any;
export declare function getKey(controlKey: string, actualKey: string): string;
export declare function reverseDeepMerge(dest: any, source?: any): any;
export declare function isNullOrUndefined(value: any): boolean;
export declare function isBlankString(value: any): boolean;
export declare function isFunction(value: any): boolean;
export declare function objAndSameType(obj1: any, obj2: any): boolean;
export declare function isObject(x: any): boolean;
export declare function clone(value: any): any;
export declare function evalStringExpression(expression: string, argNames: string[]): any;
export declare function evalExpressionValueSetter(expression: string, argNames: string[]): any;
export declare function evalExpression(expression: string | Function | boolean, thisArg: any, argVal: any[]): boolean;
