/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../src/core/components/formly.group';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../../../src/core/components/formly.form';
import * as import9 from '../../../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import10 from './formly.form.ngfactory';
import * as import11 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import12 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import13 from '@angular/core/src/linker/element_ref';
import * as import14 from '../../../../src/core/services/formly.form.builder';
import * as import15 from '@angular/common/src/directives/ng_class';
export class Wrapper_FormlyGroup {
  /*private*/ _eventHandler:Function;
  context:import0.FormlyGroup;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.FormlyGroup();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_FormlyGroup_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_FormlyGroup_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.FormlyGroup>;
  _FormlyGroup_0_3:Wrapper_FormlyGroup;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_FormlyGroup_Host0,renderType_FormlyGroup_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'formly-group',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_FormlyGroup0(this.viewUtils,this,0,this._el_0);
    this._FormlyGroup_0_3 = new Wrapper_FormlyGroup();
    this.compView_0.create(this._FormlyGroup_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._FormlyGroup_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.FormlyGroup) && (0 === requestNodeIndex))) { return this._FormlyGroup_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._FormlyGroup_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const FormlyGroupNgFactory:import7.ComponentFactory<import0.FormlyGroup> = new import7.ComponentFactory<import0.FormlyGroup>('formly-group',View_FormlyGroup_Host0,import0.FormlyGroup);
const styles_FormlyGroup:any[] = ([] as any[]);
var renderType_FormlyGroup:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_FormlyGroup,{});
export class View_FormlyGroup0 extends import1.AppView<import0.FormlyGroup> {
  _text_0:any;
  _el_1:any;
  compView_1:import1.AppView<import8.FormlyForm>;
  _NgClass_1_3:import9.Wrapper_NgClass;
  _FormlyForm_1_4:import10.Wrapper_FormlyForm;
  _text_2:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_FormlyGroup0,renderType_FormlyGroup,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'formly-form',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_1 = new import10.View_FormlyForm0(this.viewUtils,this,1,this._el_1);
    this._NgClass_1_3 = new import9.Wrapper_NgClass(this.parentView.injectorGet(import11.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import12.KeyValueDiffers,this.parentIndex),new import13.ElementRef(this._el_1),this.renderer);
    this._FormlyForm_1_4 = new import10.Wrapper_FormlyForm(this.parentView.injectorGet(import14.FormlyFormBuilder,this.parentIndex));
    this.compView_1.create(this._FormlyForm_1_4.context);
    this._text_2 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.NgClass) && (1 === requestNodeIndex))) { return this._NgClass_1_3.context; }
    if (((token === import8.FormlyForm) && (1 === requestNodeIndex))) { return this._FormlyForm_1_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = this.context.field.className;
    this._NgClass_1_3.check_ngClass(currVal_1_0_0,throwOnChange,false);
    this._NgClass_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    const currVal_1_1_0:any = this.context.model;
    this._FormlyForm_1_4.check_model(currVal_1_1_0,throwOnChange,false);
    const currVal_1_1_1:any = this.context.formlyGroup;
    this._FormlyForm_1_4.check_form(currVal_1_1_1,throwOnChange,false);
    const currVal_1_1_2:any = this.context.field.fieldGroup;
    this._FormlyForm_1_4.check_fields(currVal_1_1_2,throwOnChange,false);
    const currVal_1_1_3:any = this.context.newOptions;
    this._FormlyForm_1_4.check_options(currVal_1_1_3,throwOnChange,false);
    this._FormlyForm_1_4.ngDoCheck(this,this._el_1,throwOnChange);
    this.compView_1.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_1.destroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 1) && (ngContentIndex == 0))) {  }
  }
}