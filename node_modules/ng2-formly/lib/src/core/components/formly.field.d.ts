import { OnInit, EventEmitter, ElementRef, DoCheck, ViewContainerRef, Renderer, ComponentFactoryResolver } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { FormlyPubSub, FormlyValueChangeEvent } from '../services/formly.event.emitter';
import { FormlyConfig } from '../services/formly.config';
import { FormlyFieldConfig } from './formly.field.config';
import 'rxjs/add/operator/debounceTime';
import 'rxjs/add/operator/map';
export declare class FormlyField implements DoCheck, OnInit {
    private elementRef;
    private formlyPubSub;
    private renderer;
    private formlyConfig;
    private componentFactoryResolver;
    model: any;
    form: FormGroup;
    field: FormlyFieldConfig;
    options: any;
    hide: boolean;
    modelChange: EventEmitter<any>;
    fieldComponent: ViewContainerRef;
    private _hide;
    constructor(elementRef: ElementRef, formlyPubSub: FormlyPubSub, renderer: Renderer, formlyConfig: FormlyConfig, componentFactoryResolver: ComponentFactoryResolver);
    ngDoCheck(): void;
    ngOnInit(): void;
    changeModel(event: FormlyValueChangeEvent): void;
    private createFieldComponents();
    private createFieldComponent();
    private createComponent(fieldComponent, component);
    private psEmit(fieldKey, eventKey, value);
    private getManipulators(options);
    private runManipulators(manipulators, field);
    private checkVisibilityChange();
    private checkExpressionChange();
}
