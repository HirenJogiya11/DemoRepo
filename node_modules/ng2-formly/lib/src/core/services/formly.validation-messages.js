import { Inject, Injectable } from '@angular/core';
import { FORMLY_CONFIG_TOKEN } from './formly.config';
export var FormlyValidationMessages = (function () {
    function FormlyValidationMessages(configs) {
        var _this = this;
        if (configs === void 0) { configs = []; }
        this.messages = {};
        configs.map(function (config) {
            if (config.validationMessages) {
                config.validationMessages.map(function (validation) { return _this.addStringMessage(validation.name, validation.message); });
            }
        });
    }
    FormlyValidationMessages.prototype.addStringMessage = function (validator, message) {
        this.messages[validator] = message;
    };
    FormlyValidationMessages.prototype.getMessages = function () {
        return this.messages;
    };
    FormlyValidationMessages.prototype.getValidatorErrorMessage = function (prop) {
        return this.messages[prop];
    };
    FormlyValidationMessages.decorators = [
        { type: Injectable },
    ];
    FormlyValidationMessages.ctorParameters = [
        { type: undefined, decorators: [{ type: Inject, args: [FORMLY_CONFIG_TOKEN,] },] },
    ];
    return FormlyValidationMessages;
}());
//# sourceMappingURL=formly.validation-messages.js.map